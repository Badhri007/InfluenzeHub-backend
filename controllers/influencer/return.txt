 return (
    <div className='flex flex-col md:flex-row gap-2'>
       <div className='flex flex-row h-full bg-gray-200 md:w-[50%] lg:w-[25%]  items-center justify-center sm:ml-0 sm:justify-center md:items-center md:justify-center'>
        <br/>
        <div>
        <br/>
        <div className='text-center m-auto text-xl font-semibold'>My Profile</div>
        <br/>
        <div className="flex flex-col items-center justify-center">
          {
            profile.profile_photo_url ? (
              <img src={profile.profile_photo_url} className='w-40 h-40 md:w-60 md:h-60 rounded-[50%]  shadow-2xl' alt="Profile" />
            ) : (
              profile.gender === 'Male' ? (
                <img src={maleIcon} className='w-40 h-40 md:w-60 md:h-60 rounded-[50%]' alt="Male Icon" />
              ) : (
                <img src={femaleIcon} className='w-40 h-40 md:w-60 md:h-60 rounded-[50%]' alt="Female Icon" />
              )
            )
          }
          <br/>
          <input type="file" className="ml-10" name="profile-photo" onChange={handleChanges} />
          <br />
          
        </div>

        {/* Editable Fields */}
        <div className='flex flex-col justify-start md:ml-10'>
          <div className="flex flex-row">
            <label>Username: </label>
            <input
              type="text"
              name="username"
              className="ml-2 p-1  rounded-xl border-gray-400"
              value={profile.username}
              onChange={handleChanges}
            />
          </div>

          <div className="flex flex-row mt-4">
            <label>Niche: </label>
            <input
              type="text"
              name="niche"
              className="ml-2 p-1 rounded-xl  border-gray-400"
              value={profile.niche}
              onChange={handleChanges}
            />
          </div>

          <div className="flex flex-row mt-4">
            <label>Platform: </label>
            <input
              type="text"
              name="platform"
              className="ml-2 p-1 rounded-xl  border-gray-400"
              value={profile.platform}
              onChange={handleChanges}
            />
          </div>

          <div className="flex flex-row mt-4">
            <label>Reach: </label>
            <input
              type="text"
              name="reach"
              className="ml-2 p-1 rounded-xl  border-gray-400"
              value={profile.reach}
              onChange={handleChanges}
            />
          </div>

          {/* Update Button */}
          <button onClick={handleProfileUpdate} className="mt-4 bg-blue-500 hover:bg-green-500 transition-all hover:scale-110 text-white p-2 rounded">
            Update Profile
          </button>
        </div>
      </div>
      

      {/* Show loading icon only during image upload */}
      {(isImageUploading || isSubmitting) && (
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
          <img src={loadingIcon} className="w-10 h-10 animate-spin" alt="Loading" />
        </div>
      )}

    
    </div>
      
      <div className='w-[80%]'>
        <p className="p-5">Welcome {profile.username}!</p>
        <div className="w-full m-auto shadow-lg rounded-xl overflow-auto">
          {advertisements.length > 0 ? (
            <table className='w-full text-sm text-left rtl:text-right text-black-500'>
              <thead className='bg-gray-100'>
                <tr>
                  <th scope="col" className="px-6 py-3">CAMPAIGN</th>
                  <th scope="col" className="px-6 py-3">SPONSOR</th>
                  <th scope="col" className="px-6 py-3">STATUS</th>
                </tr>
              </thead>
              <tbody>
              {advertisements.map((ad, index) => (
                ad.campaignName && (
                  <tr key={index} className="odd:bg-white even:bg-gray-100">
                    <td className="px-4 py-3">{ad.campaignName}</td>
                    <td className="px-6 py-3">{ad.sponsorName}</td>
                    <td className="px-6 py-3">
                      <button className='p-2 px-3 mr-2 text-white rounded-xl shadow-lg bg-amber-400' value="view" onClick={(e) => handleStatus(e, ad.ad_id)}>View</button>
                      {ad.status === 'pending' && (
                        <>
                          <button className='p-2 mr-2 text-white rounded-xl shadow-lg bg-green-400' value="accept" onClick={(e) => handleStatus(e, ad.ad_id)}>Accept</button>
                          <button className='p-2 mr-2 text-white rounded-xl shadow-lg bg-red-400' value="reject" onClick={(e) => handleStatus(e, ad.ad_id)}>Reject</button>
                        </>
                      )}
                    </td>
                  </tr>
                )
              ))}
              </tbody>
            </table>
          ) : (
            <p>No advertisements available</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default InfluHomePage;
